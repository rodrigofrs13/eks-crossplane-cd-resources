# apiVersion: lambda.aws.upbound.io/v1beta1
# kind: Function
# metadata:
#   annotations:
#     meta.upbound.io/example-id: lambda/v1beta1/function
#     uptest.upbound.io/timeout: "3600"
#   labels:
#     testing.upbound.io/example-name: lambda-vpc
#   name: lambda-vpc
# spec:
#   forProvider:
#     environment:
#     - variables:
#         foo: bar
#     s3Bucket: teste-crossplane34566 # Substitua pelo bucket S3 onde seu código está armazenado
#     s3Key: index.zip  # Substitua pelo caminho para o seu código
#     handler: lambda_function.lambda_handler
#     region: us-east-1
#     runtime: python3.8
#     timeout: 60
#     role: arn:aws:iam::xxx:role/service-role/teste-role-itxmvmtq  # Substitua com o ARN do papel IAM apropriado #Tem que ter permissão na VPC, Obrigatório ter a role já criada.
#     vpcConfig:
#       - securityGroupIdSelector:
#           matchLabels:
#             testing.upbound.io/example-name: lambda-vpc
#         subnetIdSelector:
#           matchLabels:
#             testing.upbound.io/example-name: lambda-vpc
#     # vpcConfig:
#     #   securityGroupIds:
#     #     - sg-0fcb436311955b5b1  # Substitua com o ID do seu security group
#     #   subnetIds:
#     #     - subnet-05dd6ed511f9d14d4  # Substitua com o ID da sua subnet
#     #     - subnet-0974674769985efe4  # Adicione mais subnets se necessário
#   providerConfigRef:
#     name: irsa-providerconfig    